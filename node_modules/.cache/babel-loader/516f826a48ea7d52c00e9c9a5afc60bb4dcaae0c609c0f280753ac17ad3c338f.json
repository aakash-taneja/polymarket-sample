{"ast":null,"code":"var _jsxFileName = \"/Users/aakash/Documents/madhav-client/hunch_sample_frontned/src/components/WalletConnection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './WalletConnection.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WalletConnection = ({\n  onConnect\n}) => {\n  _s();\n  const [connecting, setConnecting] = useState(false);\n  const [error, setError] = useState(null);\n  const connectWallet = async () => {\n    try {\n      setConnecting(true);\n      setError(null);\n\n      // Check if MetaMask is installed\n      if (!window.ethereum) {\n        throw new Error('MetaMask is not installed. Please install MetaMask to continue.');\n      }\n\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      if (accounts.length === 0) {\n        throw new Error('No accounts found. Please make sure MetaMask is unlocked.');\n      }\n\n      // Create provider using ethers\n      const {\n        ethers\n      } = await import('ethers');\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      // Get the signer\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      console.log('Connected to MetaMask:', address);\n      onConnect(address, provider);\n    } catch (err) {\n      console.error('Failed to connect wallet:', err);\n      setError(err.message);\n    } finally {\n      setConnecting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metamask-icon\",\n        children: \"\\uD83E\\uDD8A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connect Your Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connect your MetaMask wallet to start trading on Polymarket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        disabled: connecting,\n        className: \"connect-btn\",\n        children: connecting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), \"Connecting...\"]\n        }, void 0, true) : 'Connect MetaMask'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Requirements:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"MetaMask extension installed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Polygon network configured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"USDC balance for trading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnection, \"EIqrEoxOsybjTmX4fyiwt2BUp+w=\");\n_c = WalletConnection;\nexport default WalletConnection;\nvar _c;\n$RefreshReg$(_c, \"WalletConnection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","WalletConnection","onConnect","_s","connecting","setConnecting","error","setError","connectWallet","window","ethereum","Error","accounts","request","method","length","ethers","provider","providers","Web3Provider","signer","getSigner","address","getAddress","console","log","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/aakash/Documents/madhav-client/hunch_sample_frontned/src/components/WalletConnection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './WalletConnection.css';\n\nconst WalletConnection = ({ onConnect }) => {\n  const [connecting, setConnecting] = useState(false);\n  const [error, setError] = useState(null);\n\n  const connectWallet = async () => {\n    try {\n      setConnecting(true);\n      setError(null);\n\n      // Check if MetaMask is installed\n      if (!window.ethereum) {\n        throw new Error('MetaMask is not installed. Please install MetaMask to continue.');\n      }\n\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      if (accounts.length === 0) {\n        throw new Error('No accounts found. Please make sure MetaMask is unlocked.');\n      }\n\n      // Create provider using ethers\n      const { ethers } = await import('ethers');\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      \n      // Get the signer\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n\n      console.log('Connected to MetaMask:', address);\n      onConnect(address, provider);\n    } catch (err) {\n      console.error('Failed to connect wallet:', err);\n      setError(err.message);\n    } finally {\n      setConnecting(false);\n    }\n  };\n\n  return (\n    <div className=\"wallet-connection\">\n      <div className=\"connection-card\">\n        <div className=\"metamask-icon\">\n          ðŸ¦Š\n        </div>\n        <h2>Connect Your Wallet</h2>\n        <p>Connect your MetaMask wallet to start trading on Polymarket</p>\n        \n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n\n        <button \n          onClick={connectWallet}\n          disabled={connecting}\n          className=\"connect-btn\"\n        >\n          {connecting ? (\n            <>\n              <div className=\"spinner-small\"></div>\n              Connecting...\n            </>\n          ) : (\n            'Connect MetaMask'\n          )}\n        </button>\n\n        <div className=\"requirements\">\n          <h4>Requirements:</h4>\n          <ul>\n            <li>MetaMask extension installed</li>\n            <li>Polygon network configured</li>\n            <li>USDC balance for trading</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletConnection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}