{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSellMarketPrice = exports.calculateBuyMarketPrice = exports.createMarketOrder = exports.buildMarketOrderCreationArgs = exports.getMarketOrderRawAmounts = exports.createOrder = exports.buildOrderCreationArgs = exports.getOrderRawAmounts = exports.buildOrder = exports.ROUNDING_CONFIG = void 0;\nconst tslib_1 = require(\"tslib\");\nconst units_1 = require(\"@ethersproject/units\");\nconst order_utils_1 = require(\"@polymarket/order-utils\");\nconst types_1 = require(\"../types\");\nconst utilities_1 = require(\"../utilities\");\nconst config_1 = require(\"../config\");\nexports.ROUNDING_CONFIG = {\n  \"0.1\": {\n    price: 1,\n    size: 2,\n    amount: 3\n  },\n  \"0.01\": {\n    price: 2,\n    size: 2,\n    amount: 4\n  },\n  \"0.001\": {\n    price: 3,\n    size: 2,\n    amount: 5\n  },\n  \"0.0001\": {\n    price: 4,\n    size: 2,\n    amount: 6\n  }\n};\n/**\n * Generate and sign a order\n *\n * @param signer\n * @param exchangeAddress ctf exchange contract address\n * @param chainId\n * @param OrderData\n * @returns SignedOrder\n */\nconst buildOrder = (signer, exchangeAddress, chainId, orderData) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n  const cTFExchangeOrderBuilder = new order_utils_1.ExchangeOrderBuilder(exchangeAddress, chainId, signer);\n  return cTFExchangeOrderBuilder.buildSignedOrder(orderData);\n});\nexports.buildOrder = buildOrder;\nconst getOrderRawAmounts = (side, size, price, roundConfig) => {\n  const rawPrice = (0, utilities_1.roundNormal)(price, roundConfig.price);\n  if (side === types_1.Side.BUY) {\n    // force 2 decimals places\n    const rawTakerAmt = (0, utilities_1.roundDown)(size, roundConfig.size);\n    let rawMakerAmt = rawTakerAmt * rawPrice;\n    if ((0, utilities_1.decimalPlaces)(rawMakerAmt) > roundConfig.amount) {\n      rawMakerAmt = (0, utilities_1.roundUp)(rawMakerAmt, roundConfig.amount + 4);\n      if ((0, utilities_1.decimalPlaces)(rawMakerAmt) > roundConfig.amount) {\n        rawMakerAmt = (0, utilities_1.roundDown)(rawMakerAmt, roundConfig.amount);\n      }\n    }\n    return {\n      side: order_utils_1.Side.BUY,\n      rawMakerAmt,\n      rawTakerAmt\n    };\n  } else {\n    const rawMakerAmt = (0, utilities_1.roundDown)(size, roundConfig.size);\n    let rawTakerAmt = rawMakerAmt * rawPrice;\n    if ((0, utilities_1.decimalPlaces)(rawTakerAmt) > roundConfig.amount) {\n      rawTakerAmt = (0, utilities_1.roundUp)(rawTakerAmt, roundConfig.amount + 4);\n      if ((0, utilities_1.decimalPlaces)(rawTakerAmt) > roundConfig.amount) {\n        rawTakerAmt = (0, utilities_1.roundDown)(rawTakerAmt, roundConfig.amount);\n      }\n    }\n    return {\n      side: order_utils_1.Side.SELL,\n      rawMakerAmt,\n      rawTakerAmt\n    };\n  }\n};\nexports.getOrderRawAmounts = getOrderRawAmounts;\n/**\n * Translate simple user order to args used to generate Orders\n */\nconst buildOrderCreationArgs = (signer, maker, signatureType, userOrder, roundConfig) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n  const {\n    side,\n    rawMakerAmt,\n    rawTakerAmt\n  } = (0, exports.getOrderRawAmounts)(userOrder.side, userOrder.size, userOrder.price, roundConfig);\n  const makerAmount = (0, units_1.parseUnits)(rawMakerAmt.toString(), config_1.COLLATERAL_TOKEN_DECIMALS).toString();\n  const takerAmount = (0, units_1.parseUnits)(rawTakerAmt.toString(), config_1.COLLATERAL_TOKEN_DECIMALS).toString();\n  let taker;\n  if (typeof userOrder.taker !== \"undefined\" && userOrder.taker) {\n    taker = userOrder.taker;\n  } else {\n    taker = \"0x0000000000000000000000000000000000000000\";\n  }\n  let feeRateBps;\n  if (typeof userOrder.feeRateBps !== \"undefined\" && userOrder.feeRateBps) {\n    feeRateBps = userOrder.feeRateBps.toString();\n  } else {\n    feeRateBps = \"0\";\n  }\n  let nonce;\n  if (typeof userOrder.nonce !== \"undefined\" && userOrder.nonce) {\n    nonce = userOrder.nonce.toString();\n  } else {\n    nonce = \"0\";\n  }\n  return {\n    maker,\n    taker,\n    tokenId: userOrder.tokenID,\n    makerAmount,\n    takerAmount,\n    side,\n    feeRateBps,\n    nonce,\n    signer,\n    expiration: (userOrder.expiration || 0).toString(),\n    signatureType\n  };\n});\nexports.buildOrderCreationArgs = buildOrderCreationArgs;\nconst createOrder = (eoaSigner, chainId, signatureType, funderAddress, userOrder, options) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n  const eoaSignerAddress = yield eoaSigner.getAddress();\n  // If funder address is not given, use the signer address\n  const maker = funderAddress === undefined ? eoaSignerAddress : funderAddress;\n  const contractConfig = (0, config_1.getContractConfig)(chainId);\n  const orderData = yield (0, exports.buildOrderCreationArgs)(eoaSignerAddress, maker, signatureType, userOrder, exports.ROUNDING_CONFIG[options.tickSize]);\n  const exchangeContract = options.negRisk ? contractConfig.negRiskExchange : contractConfig.exchange;\n  return (0, exports.buildOrder)(eoaSigner, exchangeContract, chainId, orderData);\n});\nexports.createOrder = createOrder;\nconst getMarketOrderRawAmounts = (side, amount, price, roundConfig) => {\n  // force 2 decimals places\n  const rawPrice = (0, utilities_1.roundDown)(price, roundConfig.price);\n  if (side === types_1.Side.BUY) {\n    const rawMakerAmt = (0, utilities_1.roundDown)(amount, roundConfig.size);\n    let rawTakerAmt = rawMakerAmt / rawPrice;\n    if ((0, utilities_1.decimalPlaces)(rawTakerAmt) > roundConfig.amount) {\n      rawTakerAmt = (0, utilities_1.roundUp)(rawTakerAmt, roundConfig.amount + 4);\n      if ((0, utilities_1.decimalPlaces)(rawTakerAmt) > roundConfig.amount) {\n        rawTakerAmt = (0, utilities_1.roundDown)(rawTakerAmt, roundConfig.amount);\n      }\n    }\n    return {\n      side: order_utils_1.Side.BUY,\n      rawMakerAmt,\n      rawTakerAmt\n    };\n  } else {\n    const rawMakerAmt = (0, utilities_1.roundDown)(amount, roundConfig.size);\n    let rawTakerAmt = rawMakerAmt * rawPrice;\n    if ((0, utilities_1.decimalPlaces)(rawTakerAmt) > roundConfig.amount) {\n      rawTakerAmt = (0, utilities_1.roundUp)(rawTakerAmt, roundConfig.amount + 4);\n      if ((0, utilities_1.decimalPlaces)(rawTakerAmt) > roundConfig.amount) {\n        rawTakerAmt = (0, utilities_1.roundDown)(rawTakerAmt, roundConfig.amount);\n      }\n    }\n    return {\n      side: order_utils_1.Side.SELL,\n      rawMakerAmt,\n      rawTakerAmt\n    };\n  }\n};\nexports.getMarketOrderRawAmounts = getMarketOrderRawAmounts;\n/**\n * Translate simple user market order to args used to generate Orders\n */\nconst buildMarketOrderCreationArgs = (signer, maker, signatureType, userMarketOrder, roundConfig) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n  const {\n    side,\n    rawMakerAmt,\n    rawTakerAmt\n  } = (0, exports.getMarketOrderRawAmounts)(userMarketOrder.side, userMarketOrder.amount, userMarketOrder.price || 1, roundConfig);\n  const makerAmount = (0, units_1.parseUnits)(rawMakerAmt.toString(), config_1.COLLATERAL_TOKEN_DECIMALS).toString();\n  const takerAmount = (0, units_1.parseUnits)(rawTakerAmt.toString(), config_1.COLLATERAL_TOKEN_DECIMALS).toString();\n  let taker;\n  if (typeof userMarketOrder.taker !== \"undefined\" && userMarketOrder.taker) {\n    taker = userMarketOrder.taker;\n  } else {\n    taker = \"0x0000000000000000000000000000000000000000\";\n  }\n  let feeRateBps;\n  if (typeof userMarketOrder.feeRateBps !== \"undefined\" && userMarketOrder.feeRateBps) {\n    feeRateBps = userMarketOrder.feeRateBps.toString();\n  } else {\n    feeRateBps = \"0\";\n  }\n  let nonce;\n  if (typeof userMarketOrder.nonce !== \"undefined\" && userMarketOrder.nonce) {\n    nonce = userMarketOrder.nonce.toString();\n  } else {\n    nonce = \"0\";\n  }\n  return {\n    maker,\n    taker,\n    tokenId: userMarketOrder.tokenID,\n    makerAmount,\n    takerAmount,\n    side,\n    feeRateBps,\n    nonce,\n    signer,\n    expiration: \"0\",\n    signatureType\n  };\n});\nexports.buildMarketOrderCreationArgs = buildMarketOrderCreationArgs;\nconst createMarketOrder = (eoaSigner, chainId, signatureType, funderAddress, userMarketOrder, options) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n  const eoaSignerAddress = yield eoaSigner.getAddress();\n  // If funder address is not given, use the signer address\n  const maker = funderAddress === undefined ? eoaSignerAddress : funderAddress;\n  const contractConfig = (0, config_1.getContractConfig)(chainId);\n  const orderData = yield (0, exports.buildMarketOrderCreationArgs)(eoaSignerAddress, maker, signatureType, userMarketOrder, exports.ROUNDING_CONFIG[options.tickSize]);\n  const exchangeContract = options.negRisk ? contractConfig.negRiskExchange : contractConfig.exchange;\n  return (0, exports.buildOrder)(eoaSigner, exchangeContract, chainId, orderData);\n});\nexports.createMarketOrder = createMarketOrder;\n/**\n * calculateBuyMarketPrice calculates the market price to buy a $$ amount\n * @param positions\n * @param amountToMatch worth to buy\n * @returns\n */\nconst calculateBuyMarketPrice = (positions, amountToMatch, orderType) => {\n  if (!positions.length) {\n    throw new Error(\"no match\");\n  }\n  let sum = 0;\n  /*\n  Asks:\n  [\n      { price: '0.6', size: '100' },\n      { price: '0.55', size: '100' },\n      { price: '0.5', size: '100' }\n  ]\n  So, if the amount to match is $150 that will be reached at first position so price will be 0.6\n  */\n  for (let i = positions.length - 1; i >= 0; i--) {\n    const p = positions[i];\n    sum += parseFloat(p.size) * parseFloat(p.price);\n    if (sum >= amountToMatch) {\n      return parseFloat(p.price);\n    }\n  }\n  if (orderType === types_1.OrderType.FOK) {\n    throw new Error(\"no match\");\n  }\n  return parseFloat(positions[0].price);\n};\nexports.calculateBuyMarketPrice = calculateBuyMarketPrice;\n/**\n * calculateSellMarketPrice calculates the market price to sell a shares\n * @param positions\n * @param amountToMatch sells to share\n * @returns\n */\nconst calculateSellMarketPrice = (positions, amountToMatch, orderType) => {\n  if (!positions.length) {\n    throw new Error(\"no match\");\n  }\n  let sum = 0;\n  /*\n  Bids:\n  [\n      { price: '0.4', size: '100' },\n      { price: '0.45', size: '100' },\n      { price: '0.5', size: '100' }\n  ]\n  So, if the amount to match is 300 that will be reached at the first position so price will be 0.4\n  */\n  for (let i = positions.length - 1; i >= 0; i--) {\n    const p = positions[i];\n    sum += parseFloat(p.size);\n    if (sum >= amountToMatch) {\n      return parseFloat(p.price);\n    }\n  }\n  if (orderType === types_1.OrderType.FOK) {\n    throw new Error(\"no match\");\n  }\n  return parseFloat(positions[0].price);\n};\nexports.calculateSellMarketPrice = calculateSellMarketPrice;","map":{"version":3,"names":["units_1","require","order_utils_1","types_1","utilities_1","config_1","exports","ROUNDING_CONFIG","price","size","amount","buildOrder","signer","exchangeAddress","chainId","orderData","tslib_1","__awaiter","cTFExchangeOrderBuilder","ExchangeOrderBuilder","buildSignedOrder","getOrderRawAmounts","side","roundConfig","rawPrice","roundNormal","Side","BUY","rawTakerAmt","roundDown","rawMakerAmt","decimalPlaces","roundUp","SELL","buildOrderCreationArgs","maker","signatureType","userOrder","makerAmount","parseUnits","toString","COLLATERAL_TOKEN_DECIMALS","takerAmount","taker","feeRateBps","nonce","tokenId","tokenID","expiration","createOrder","eoaSigner","funderAddress","options","eoaSignerAddress","getAddress","undefined","contractConfig","getContractConfig","tickSize","exchangeContract","negRisk","negRiskExchange","exchange","getMarketOrderRawAmounts","buildMarketOrderCreationArgs","userMarketOrder","createMarketOrder","calculateBuyMarketPrice","positions","amountToMatch","orderType","length","Error","sum","i","p","parseFloat","OrderType","FOK","calculateSellMarketPrice"],"sources":["../../src/order-builder/helpers.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}