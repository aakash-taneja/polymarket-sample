{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('./to-buffer');\nvar Transform = require('readable-stream').Transform;\nvar inherits = require('inherits');\nfunction HashBase(blockSize) {\n  Transform.call(this);\n  this._block = Buffer.allocUnsafe(blockSize);\n  this._blockSize = blockSize;\n  this._blockOffset = 0;\n  this._length = [0, 0, 0, 0];\n  this._finalized = false;\n}\ninherits(HashBase, Transform);\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null;\n  try {\n    this.update(chunk, encoding);\n  } catch (err) {\n    error = err;\n  }\n  callback(error);\n};\nHashBase.prototype._flush = function (callback) {\n  var error = null;\n  try {\n    this.push(this.digest());\n  } catch (err) {\n    error = err;\n  }\n  callback(error);\n};\nHashBase.prototype.update = function (data, encoding) {\n  if (this._finalized) {\n    throw new Error('Digest already called');\n  }\n  var dataBuffer = toBuffer(data, encoding); // asserts correct input type\n\n  // consume data\n  var block = this._block;\n  var offset = 0;\n  while (this._blockOffset + dataBuffer.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) {\n      block[i] = dataBuffer[offset];\n      i += 1;\n      offset += 1;\n    }\n    this._update();\n    this._blockOffset = 0;\n  }\n  while (offset < dataBuffer.length) {\n    block[this._blockOffset] = dataBuffer[offset];\n    this._blockOffset += 1;\n    offset += 1;\n  }\n\n  // update length\n  for (var j = 0, carry = dataBuffer.length * 8; carry > 0; ++j) {\n    this._length[j] += carry;\n    carry = this._length[j] / 0x0100000000 | 0;\n    if (carry > 0) {\n      this._length[j] -= 0x0100000000 * carry;\n    }\n  }\n  return this;\n};\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented');\n};\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) {\n    throw new Error('Digest already called');\n  }\n  this._finalized = true;\n  var digest = this._digest();\n  if (encoding !== undefined) {\n    digest = digest.toString(encoding);\n  }\n\n  // reset state\n  this._block.fill(0);\n  this._blockOffset = 0;\n  for (var i = 0; i < 4; ++i) {\n    this._length[i] = 0;\n  }\n  return digest;\n};\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented');\n};\nmodule.exports = HashBase;","map":{"version":3,"names":["Buffer","require","toBuffer","Transform","inherits","HashBase","blockSize","call","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","prototype","_transform","chunk","encoding","callback","error","update","err","_flush","push","digest","data","Error","dataBuffer","block","offset","length","i","_update","j","carry","_digest","undefined","toString","fill","module","exports"],"sources":["/Users/aakash/Documents/madhav-client/hunch_sample_frontned/node_modules/ripemd160/node_modules/hash-base/index.js"],"sourcesContent":["'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('./to-buffer');\nvar Transform = require('readable-stream').Transform;\nvar inherits = require('inherits');\n\nfunction HashBase(blockSize) {\n\tTransform.call(this);\n\n\tthis._block = Buffer.allocUnsafe(blockSize);\n\tthis._blockSize = blockSize;\n\tthis._blockOffset = 0;\n\tthis._length = [0, 0, 0, 0];\n\n\tthis._finalized = false;\n}\n\ninherits(HashBase, Transform);\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n\tvar error = null;\n\ttry {\n\t\tthis.update(chunk, encoding);\n\t} catch (err) {\n\t\terror = err;\n\t}\n\n\tcallback(error);\n};\n\nHashBase.prototype._flush = function (callback) {\n\tvar error = null;\n\ttry {\n\t\tthis.push(this.digest());\n\t} catch (err) {\n\t\terror = err;\n\t}\n\n\tcallback(error);\n};\n\nHashBase.prototype.update = function (data, encoding) {\n\tif (this._finalized) {\n\t\tthrow new Error('Digest already called');\n\t}\n\n\tvar dataBuffer = toBuffer(data, encoding); // asserts correct input type\n\n\t// consume data\n\tvar block = this._block;\n\tvar offset = 0;\n\twhile (this._blockOffset + dataBuffer.length - offset >= this._blockSize) {\n\t\tfor (var i = this._blockOffset; i < this._blockSize;) {\n\t\t\tblock[i] = dataBuffer[offset];\n\t\t\ti += 1;\n\t\t\toffset += 1;\n\t\t}\n\t\tthis._update();\n\t\tthis._blockOffset = 0;\n\t}\n\twhile (offset < dataBuffer.length) {\n\t\tblock[this._blockOffset] = dataBuffer[offset];\n\t\tthis._blockOffset += 1;\n\t\toffset += 1;\n\t}\n\n\t// update length\n\tfor (var j = 0, carry = dataBuffer.length * 8; carry > 0; ++j) {\n\t\tthis._length[j] += carry;\n\t\tcarry = (this._length[j] / 0x0100000000) | 0;\n\t\tif (carry > 0) {\n\t\t\tthis._length[j] -= 0x0100000000 * carry;\n\t\t}\n\t}\n\n\treturn this;\n};\n\nHashBase.prototype._update = function () {\n\tthrow new Error('_update is not implemented');\n};\n\nHashBase.prototype.digest = function (encoding) {\n\tif (this._finalized) {\n\t\tthrow new Error('Digest already called');\n\t}\n\tthis._finalized = true;\n\n\tvar digest = this._digest();\n\tif (encoding !== undefined) {\n\t\tdigest = digest.toString(encoding);\n\t}\n\n\t// reset state\n\tthis._block.fill(0);\n\tthis._blockOffset = 0;\n\tfor (var i = 0; i < 4; ++i) {\n\t\tthis._length[i] = 0;\n\t}\n\n\treturn digest;\n};\n\nHashBase.prototype._digest = function () {\n\tthrow new Error('_digest is not implemented');\n};\n\nmodule.exports = HashBase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}