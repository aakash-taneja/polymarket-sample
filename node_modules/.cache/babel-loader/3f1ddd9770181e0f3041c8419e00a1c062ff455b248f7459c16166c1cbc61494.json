{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExchangeOrderBuilder = void 0;\nconst tslib_1 = require(\"tslib\");\nconst eth_sig_util_1 = require(\"@metamask/eth-sig-util\");\nconst exchange_order_const_1 = require(\"./exchange.order.const\");\nconst signature_types_model_1 = require(\"./model/signature-types.model\");\nconst utils_1 = require(\"./utils\");\nclass ExchangeOrderBuilder {\n  constructor(contractAddress, chainId, signer, generateSalt = utils_1.generateOrderSalt) {\n    this.contractAddress = contractAddress;\n    this.chainId = chainId;\n    this.signer = signer;\n    this.generateSalt = generateSalt;\n  }\n  /**\n   * build an order object including the signature.\n   * @param orderData\n   * @returns a SignedOrder object (order + signature)\n   */\n  buildSignedOrder(orderData) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const order = yield this.buildOrder(orderData);\n      const orderTypedData = this.buildOrderTypedData(order);\n      const orderSignature = yield this.buildOrderSignature(orderTypedData);\n      return Object.assign(Object.assign({}, order), {\n        signature: orderSignature\n      });\n    });\n  }\n  /**\n   * Creates an Order object from order data.\n   * @param OrderData\n   * @returns a Order object (not signed)\n   */\n  buildOrder({\n    maker,\n    taker,\n    tokenId,\n    makerAmount,\n    takerAmount,\n    side,\n    feeRateBps,\n    nonce,\n    signer,\n    expiration,\n    signatureType\n  }) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (typeof signer == 'undefined' || !signer) {\n        signer = maker;\n      }\n      const signerAddress = yield this.signer.getAddress();\n      if (signer !== signerAddress) {\n        throw new Error('signer does not match');\n      }\n      if (typeof expiration == 'undefined' || !expiration) {\n        expiration = '0';\n      }\n      if (typeof signatureType == 'undefined' || !signatureType) {\n        // Default to EOA 712 sig type\n        signatureType = signature_types_model_1.SignatureType.EOA;\n      }\n      return {\n        salt: this.generateSalt(),\n        maker,\n        signer,\n        taker,\n        tokenId,\n        makerAmount,\n        takerAmount,\n        expiration,\n        nonce,\n        feeRateBps,\n        side,\n        signatureType\n      };\n    });\n  }\n  /**\n   * Parses an Order object to EIP712 typed data\n   * @param order\n   * @returns a EIP712TypedData object\n   */\n  buildOrderTypedData(order) {\n    return {\n      primaryType: 'Order',\n      types: {\n        EIP712Domain: exchange_order_const_1.EIP712_DOMAIN,\n        Order: exchange_order_const_1.ORDER_STRUCTURE\n      },\n      domain: {\n        name: exchange_order_const_1.PROTOCOL_NAME,\n        version: exchange_order_const_1.PROTOCOL_VERSION,\n        chainId: this.chainId,\n        verifyingContract: this.contractAddress\n      },\n      message: {\n        salt: order.salt,\n        maker: order.maker,\n        signer: order.signer,\n        taker: order.taker,\n        tokenId: order.tokenId,\n        makerAmount: order.makerAmount,\n        takerAmount: order.takerAmount,\n        expiration: order.expiration,\n        nonce: order.nonce,\n        feeRateBps: order.feeRateBps,\n        side: order.side,\n        signatureType: order.signatureType\n      }\n    };\n  }\n  /**\n   * Generates order's signature from a EIP712TypedData object + the signer address\n   * @param typedData\n   * @returns a OrderSignature that is an string\n   */\n  buildOrderSignature(typedData) {\n    delete typedData.types.EIP712Domain;\n    return this.signer._signTypedData(typedData.domain, typedData.types, typedData.message);\n  }\n  /**\n   * Generates the hash of the order from a EIP712TypedData object.\n   * @param orderTypedData\n   * @returns a OrderHash that is an string\n   */\n  buildOrderHash(orderTypedData) {\n    const message = orderTypedData;\n    return exchange_order_const_1.ZX + eth_sig_util_1.TypedDataUtils.eip712Hash(message, eth_sig_util_1.SignTypedDataVersion.V4).toString('hex');\n  }\n}\nexports.ExchangeOrderBuilder = ExchangeOrderBuilder;","map":{"version":3,"names":["eth_sig_util_1","require","exchange_order_const_1","signature_types_model_1","utils_1","ExchangeOrderBuilder","constructor","contractAddress","chainId","signer","generateSalt","generateOrderSalt","buildSignedOrder","orderData","order","buildOrder","orderTypedData","buildOrderTypedData","orderSignature","buildOrderSignature","Object","assign","signature","maker","taker","tokenId","makerAmount","takerAmount","side","feeRateBps","nonce","expiration","signatureType","signerAddress","getAddress","Error","SignatureType","EOA","salt","primaryType","types","EIP712Domain","EIP712_DOMAIN","Order","ORDER_STRUCTURE","domain","name","PROTOCOL_NAME","version","PROTOCOL_VERSION","verifyingContract","message","typedData","_signTypedData","buildOrderHash","ZX","TypedDataUtils","eip712Hash","SignTypedDataVersion","V4","toString","exports"],"sources":["../src/exchange.order.builder.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}