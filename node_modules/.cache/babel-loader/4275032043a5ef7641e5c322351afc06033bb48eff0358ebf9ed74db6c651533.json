{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPolyHmacSignature = void 0;\nconst tslib_1 = require(\"tslib\");\nconst crypto_1 = tslib_1.__importDefault(require(\"crypto\"));\nfunction replaceAll(s, search, replace) {\n  return s.split(search).join(replace);\n}\n/**\n * Builds the canonical Polymarket CLOB HMAC signature\n * @param signer\n * @param key\n * @param secret\n * @param passphrase\n * @returns string\n */\nconst buildPolyHmacSignature = (secret, timestamp, method, requestPath, body) => {\n  let message = timestamp + method + requestPath;\n  if (body !== undefined) {\n    message += body;\n  }\n  const base64Secret = Buffer.from(secret, \"base64\");\n  const hmac = crypto_1.default.createHmac(\"sha256\", base64Secret);\n  const sig = hmac.update(message).digest(\"base64\");\n  // NOTE: Must be url safe base64 encoding, but keep base64 \"=\" suffix\n  // Convert '+' to '-'\n  // Convert '/' to '_'\n  const sigUrlSafe = replaceAll(replaceAll(sig, \"+\", \"-\"), \"/\", \"_\");\n  return sigUrlSafe;\n};\nexports.buildPolyHmacSignature = buildPolyHmacSignature;","map":{"version":3,"names":["crypto_1","tslib_1","__importDefault","require","replaceAll","s","search","replace","split","join","buildPolyHmacSignature","secret","timestamp","method","requestPath","body","message","undefined","base64Secret","Buffer","from","hmac","default","createHmac","sig","update","digest","sigUrlSafe","exports"],"sources":["../../src/signing/hmac.ts"],"sourcesContent":[null],"mappings":";;;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAC,OAAA;AAEA,SAASC,UAAUA,CAACC,CAAS,EAAEC,MAAc,EAAEC,OAAe;EAC1D,OAAOF,CAAC,CAACG,KAAK,CAACF,MAAM,CAAC,CAACG,IAAI,CAACF,OAAO,CAAC;AACxC;AAEA;;;;;;;;AAQO,MAAMG,sBAAsB,GAAGA,CAClCC,MAAc,EACdC,SAAiB,EACjBC,MAAc,EACdC,WAAmB,EACnBC,IAAa,KACL;EACR,IAAIC,OAAO,GAAGJ,SAAS,GAAGC,MAAM,GAAGC,WAAW;EAC9C,IAAIC,IAAI,KAAKE,SAAS,EAAE;IACpBD,OAAO,IAAID,IAAI;;EAEnB,MAAMG,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACT,MAAM,EAAE,QAAQ,CAAC;EAClD,MAAMU,IAAI,GAAGrB,QAAA,CAAAsB,OAAM,CAACC,UAAU,CAAC,QAAQ,EAAEL,YAAY,CAAC;EACtD,MAAMM,GAAG,GAAGH,IAAI,CAACI,MAAM,CAACT,OAAO,CAAC,CAACU,MAAM,CAAC,QAAQ,CAAC;EAEjD;EACA;EACA;EACA,MAAMC,UAAU,GAAGvB,UAAU,CAACA,UAAU,CAACoB,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EAClE,OAAOG,UAAU;AACrB,CAAC;AApBYC,OAAA,CAAAlB,sBAAsB,GAAAA,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}