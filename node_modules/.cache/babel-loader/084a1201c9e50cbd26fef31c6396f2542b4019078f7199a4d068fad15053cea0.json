{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar StringDecoder = require('string_decoder').StringDecoder;\nvar inherits = require('inherits');\nvar toBuffer = require('to-buffer');\nfunction CipherBase(hashMode) {\n  Transform.call(this);\n  this.hashMode = typeof hashMode === 'string';\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest;\n  } else {\n    this['final'] = this._finalOrDigest;\n  }\n  if (this._final) {\n    this.__final = this._final;\n    this._final = null;\n  }\n  this._decoder = null;\n  this._encoding = null;\n}\ninherits(CipherBase, Transform);\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  var bufferData = toBuffer(data, inputEnc); // asserts correct input type\n  var outData = this._update(bufferData);\n  if (this.hashMode) {\n    return this;\n  }\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc);\n  }\n  return outData;\n};\nCipherBase.prototype.setAutoPadding = function () {};\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state');\n};\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state');\n};\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state');\n};\nCipherBase.prototype._transform = function (data, _, next) {\n  var err;\n  try {\n    if (this.hashMode) {\n      this._update(data);\n    } else {\n      this.push(this._update(data));\n    }\n  } catch (e) {\n    err = e;\n  } finally {\n    next(err);\n  }\n};\nCipherBase.prototype._flush = function (done) {\n  var err;\n  try {\n    this.push(this.__final());\n  } catch (e) {\n    err = e;\n  }\n  done(err);\n};\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0);\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true);\n  }\n  return outData;\n};\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc);\n    this._encoding = enc;\n  }\n  if (this._encoding !== enc) {\n    throw new Error('can’t switch encodings');\n  }\n  var out = this._decoder.write(value);\n  if (fin) {\n    out += this._decoder.end();\n  }\n  return out;\n};\nmodule.exports = CipherBase;","map":{"version":3,"names":["Buffer","require","Transform","StringDecoder","inherits","toBuffer","CipherBase","hashMode","call","_finalOrDigest","_final","__final","_decoder","_encoding","prototype","update","data","inputEnc","outputEnc","bufferData","outData","_update","_toString","setAutoPadding","getAuthTag","Error","setAuthTag","setAAD","_transform","_","next","err","push","e","_flush","done","alloc","value","enc","fin","out","write","end","module","exports"],"sources":["/Users/aakash/Documents/madhav-client/hunch_sample_frontned/node_modules/cipher-base/index.js"],"sourcesContent":["'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar StringDecoder = require('string_decoder').StringDecoder;\nvar inherits = require('inherits');\nvar toBuffer = require('to-buffer');\n\nfunction CipherBase(hashMode) {\n\tTransform.call(this);\n\tthis.hashMode = typeof hashMode === 'string';\n\tif (this.hashMode) {\n\t\tthis[hashMode] = this._finalOrDigest;\n\t} else {\n\t\tthis['final'] = this._finalOrDigest;\n\t}\n\tif (this._final) {\n\t\tthis.__final = this._final;\n\t\tthis._final = null;\n\t}\n\tthis._decoder = null;\n\tthis._encoding = null;\n}\ninherits(CipherBase, Transform);\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n\tvar bufferData = toBuffer(data, inputEnc); // asserts correct input type\n\tvar outData = this._update(bufferData);\n\tif (this.hashMode) {\n\t\treturn this;\n\t}\n\n\tif (outputEnc) {\n\t\toutData = this._toString(outData, outputEnc);\n\t}\n\n\treturn outData;\n};\n\nCipherBase.prototype.setAutoPadding = function () {};\nCipherBase.prototype.getAuthTag = function () {\n\tthrow new Error('trying to get auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAuthTag = function () {\n\tthrow new Error('trying to set auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAAD = function () {\n\tthrow new Error('trying to set aad in unsupported state');\n};\n\nCipherBase.prototype._transform = function (data, _, next) {\n\tvar err;\n\ttry {\n\t\tif (this.hashMode) {\n\t\t\tthis._update(data);\n\t\t} else {\n\t\t\tthis.push(this._update(data));\n\t\t}\n\t} catch (e) {\n\t\terr = e;\n\t} finally {\n\t\tnext(err);\n\t}\n};\nCipherBase.prototype._flush = function (done) {\n\tvar err;\n\ttry {\n\t\tthis.push(this.__final());\n\t} catch (e) {\n\t\terr = e;\n\t}\n\n\tdone(err);\n};\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n\tvar outData = this.__final() || Buffer.alloc(0);\n\tif (outputEnc) {\n\t\toutData = this._toString(outData, outputEnc, true);\n\t}\n\treturn outData;\n};\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n\tif (!this._decoder) {\n\t\tthis._decoder = new StringDecoder(enc);\n\t\tthis._encoding = enc;\n\t}\n\n\tif (this._encoding !== enc) {\n\t\tthrow new Error('can’t switch encodings');\n\t}\n\n\tvar out = this._decoder.write(value);\n\tif (fin) {\n\t\tout += this._decoder.end();\n\t}\n\n\treturn out;\n};\n\nmodule.exports = CipherBase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}