{"ast":null,"code":"'use strict';\n\nvar md5 = require('create-hash/md5');\nvar RIPEMD160 = require('ripemd160');\nvar sha = require('sha.js');\nvar Buffer = require('safe-buffer').Buffer;\nvar checkParameters = require('./precondition');\nvar defaultEncoding = require('./default-encoding');\nvar toBuffer = require('./to-buffer');\nvar ZEROS = Buffer.alloc(128);\nvar sizes = {\n  __proto__: null,\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  'sha512-256': 32,\n  ripemd160: 20,\n  rmd160: 20\n};\nvar mapping = {\n  __proto__: null,\n  'sha-1': 'sha1',\n  'sha-224': 'sha224',\n  'sha-256': 'sha256',\n  'sha-384': 'sha384',\n  'sha-512': 'sha512',\n  'ripemd-160': 'ripemd160'\n};\nfunction rmd160Func(data) {\n  return new RIPEMD160().update(data).digest();\n}\nfunction getDigest(alg) {\n  function shaFunc(data) {\n    return sha(alg).update(data).digest();\n  }\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return rmd160Func;\n  }\n  if (alg === 'md5') {\n    return md5;\n  }\n  return shaFunc;\n}\nfunction Hmac(alg, key, saltLen) {\n  var hash = getDigest(alg);\n  var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n  if (key.length > blocksize) {\n    key = hash(key);\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize);\n  }\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36;\n    opad[i] = key[i] ^ 0x5C;\n  }\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);\n  ipad.copy(ipad1, 0, 0, blocksize);\n  this.ipad1 = ipad1;\n  this.ipad2 = ipad;\n  this.opad = opad;\n  this.alg = alg;\n  this.blocksize = blocksize;\n  this.hash = hash;\n  this.size = sizes[alg];\n}\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize);\n  var h = this.hash(ipad);\n  h.copy(this.opad, this.blocksize);\n  return this.hash(this.opad);\n};\nfunction pbkdf2(password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen);\n  password = toBuffer(password, defaultEncoding, 'Password');\n  salt = toBuffer(salt, defaultEncoding, 'Salt');\n  var lowerDigest = (digest || 'sha1').toLowerCase();\n  var mappedDigest = mapping[lowerDigest] || lowerDigest;\n  var size = sizes[mappedDigest];\n  if (typeof size !== 'number' || !size) {\n    throw new TypeError('Digest algorithm not supported: ' + digest);\n  }\n  var hmac = new Hmac(mappedDigest, password, salt.length);\n  var DK = Buffer.allocUnsafe(keylen);\n  var block1 = Buffer.allocUnsafe(salt.length + 4);\n  salt.copy(block1, 0, 0, salt.length);\n  var destPos = 0;\n  var hLen = size;\n  var l = Math.ceil(keylen / hLen);\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length);\n    var T = hmac.run(block1, hmac.ipad1);\n    var U = T;\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2);\n      for (var k = 0; k < hLen; k++) {\n        T[k] ^= U[k];\n      }\n    }\n    T.copy(DK, destPos);\n    destPos += hLen;\n  }\n  return DK;\n}\nmodule.exports = pbkdf2;","map":{"version":3,"names":["md5","require","RIPEMD160","sha","Buffer","checkParameters","defaultEncoding","toBuffer","ZEROS","alloc","sizes","__proto__","sha1","sha224","sha256","sha384","sha512","ripemd160","rmd160","mapping","rmd160Func","data","update","digest","getDigest","alg","shaFunc","Hmac","key","saltLen","hash","blocksize","length","concat","ipad","allocUnsafe","opad","i","ipad1","copy","ipad2","size","prototype","run","h","pbkdf2","password","salt","iterations","keylen","lowerDigest","toLowerCase","mappedDigest","TypeError","hmac","DK","block1","destPos","hLen","l","Math","ceil","writeUInt32BE","T","U","j","k","module","exports"],"sources":["/Users/aakash/Documents/madhav-client/hunch_sample_frontned/node_modules/pbkdf2/lib/sync-browser.js"],"sourcesContent":["'use strict';\n\nvar md5 = require('create-hash/md5');\nvar RIPEMD160 = require('ripemd160');\nvar sha = require('sha.js');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar checkParameters = require('./precondition');\nvar defaultEncoding = require('./default-encoding');\nvar toBuffer = require('./to-buffer');\n\nvar ZEROS = Buffer.alloc(128);\nvar sizes = {\n\t__proto__: null,\n\tmd5: 16,\n\tsha1: 20,\n\tsha224: 28,\n\tsha256: 32,\n\tsha384: 48,\n\tsha512: 64,\n\t'sha512-256': 32,\n\tripemd160: 20,\n\trmd160: 20\n};\n\nvar mapping = {\n\t__proto__: null,\n\t'sha-1': 'sha1',\n\t'sha-224': 'sha224',\n\t'sha-256': 'sha256',\n\t'sha-384': 'sha384',\n\t'sha-512': 'sha512',\n\t'ripemd-160': 'ripemd160'\n};\n\nfunction rmd160Func(data) {\n\treturn new RIPEMD160().update(data).digest();\n}\n\nfunction getDigest(alg) {\n\tfunction shaFunc(data) {\n\t\treturn sha(alg).update(data).digest();\n\t}\n\n\tif (alg === 'rmd160' || alg === 'ripemd160') {\n\t\treturn rmd160Func;\n\t}\n\tif (alg === 'md5') {\n\t\treturn md5;\n\t}\n\treturn shaFunc;\n}\n\nfunction Hmac(alg, key, saltLen) {\n\tvar hash = getDigest(alg);\n\tvar blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n\n\tif (key.length > blocksize) {\n\t\tkey = hash(key);\n\t} else if (key.length < blocksize) {\n\t\tkey = Buffer.concat([key, ZEROS], blocksize);\n\t}\n\n\tvar ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n\tvar opad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n\tfor (var i = 0; i < blocksize; i++) {\n\t\tipad[i] = key[i] ^ 0x36;\n\t\topad[i] = key[i] ^ 0x5C;\n\t}\n\n\tvar ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);\n\tipad.copy(ipad1, 0, 0, blocksize);\n\tthis.ipad1 = ipad1;\n\tthis.ipad2 = ipad;\n\tthis.opad = opad;\n\tthis.alg = alg;\n\tthis.blocksize = blocksize;\n\tthis.hash = hash;\n\tthis.size = sizes[alg];\n}\n\nHmac.prototype.run = function (data, ipad) {\n\tdata.copy(ipad, this.blocksize);\n\tvar h = this.hash(ipad);\n\th.copy(this.opad, this.blocksize);\n\treturn this.hash(this.opad);\n};\n\nfunction pbkdf2(password, salt, iterations, keylen, digest) {\n\tcheckParameters(iterations, keylen);\n\tpassword = toBuffer(password, defaultEncoding, 'Password');\n\tsalt = toBuffer(salt, defaultEncoding, 'Salt');\n\n\tvar lowerDigest = (digest || 'sha1').toLowerCase();\n\tvar mappedDigest = mapping[lowerDigest] || lowerDigest;\n\tvar size = sizes[mappedDigest];\n\tif (typeof size !== 'number' || !size) {\n\t\tthrow new TypeError('Digest algorithm not supported: ' + digest);\n\t}\n\n\tvar hmac = new Hmac(mappedDigest, password, salt.length);\n\n\tvar DK = Buffer.allocUnsafe(keylen);\n\tvar block1 = Buffer.allocUnsafe(salt.length + 4);\n\tsalt.copy(block1, 0, 0, salt.length);\n\n\tvar destPos = 0;\n\tvar hLen = size;\n\tvar l = Math.ceil(keylen / hLen);\n\n\tfor (var i = 1; i <= l; i++) {\n\t\tblock1.writeUInt32BE(i, salt.length);\n\n\t\tvar T = hmac.run(block1, hmac.ipad1);\n\t\tvar U = T;\n\n\t\tfor (var j = 1; j < iterations; j++) {\n\t\t\tU = hmac.run(U, hmac.ipad2);\n\t\t\tfor (var k = 0; k < hLen; k++) {\n\t\t\t\tT[k] ^= U[k];\n\t\t\t}\n\t\t}\n\n\t\tT.copy(DK, destPos);\n\t\tdestPos += hLen;\n\t}\n\n\treturn DK;\n}\n\nmodule.exports = pbkdf2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}